{"version":3,"sources":["ErrorBoundary/ErrorBoundary.js","CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","react_default","a","createElement","message","children","error","Component","NavCircleButton","tag","className","childrenm","otherProps","objectWithoutProperties","React","objectSpread","join","defaultProps","createContext","findNote","notes","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","context","_this$context$folders","folders","_this$context$notes","map","folder","index","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","contextType","ApiContext","NotePageNav","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","deleteNote","onDeleteNote","catch","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","handleSubmit","refs","folderInput","value","body","JSON","stringify","addFolder","log","_this2","onSubmit","event","required","ref","defaultValue","AddNote","nameInput","contentInput","formatDateTime","addNote","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","htmlFor","App","setState","handleAddFolder","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","src_ErrorBoundary_ErrorBoundary","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2abd4980.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <h2>{this.props.message}</h2>\n            );\n        }\n        return this.props.children;\n    }\n\n}\n\nexport default ErrorBoundary","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext(\n//   {\n//   notes: [],\n//   folders: [],\n//   addFolder: () => {},\n//   addNote: () => {},\n//   deleteNote: () => {},\n// }\n)\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map((folder, index) =>\n            <li key={index}>\n              <NavLink\n                key={index}\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span key={folder.id} className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:9090'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                key={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport config from '../config.js';\nimport ApiContext from '../ApiContext';\n\nexport default class AddFolder extends Component {\n\n  static contextType = ApiContext;\n\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // const name = e.target.name.value;\n    const name = this.refs.folderInput.value\n\n    fetch(`${config.API_ENDPOINT}/folders/`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({name})\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.addFolder({ name })\n        console.log(name)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={(event) => {\n          this.handleSubmit(event)\n        }}>\n          <input type=\"text\"\n            className=\"registration__control\"\n            name=\"lksflsjf\"\n            required\n            id=\"name\"\n            ref=\"folderInput\"\n            defaultValue=\"Folder Name\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport config from '../config.js';\nimport ApiContext from '../ApiContext';\n\nexport default class AddNote extends Component {\n    static contextType = ApiContext;\n\n    formatDateTime() {\n      const today = new Date();\n      const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const dateTime = date+' '+time;\n      return dateTime\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      const name = this.refs.nameInput.value;\n      const content = this.refs.contentInput.value;\n      const folderId = this.refs.folderId.value;\n      const modified = `${this.formatDateTime()}`\n\n      fetch(`${config.API_ENDPOINT}/notes/`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({name, folderId, content, modified})\n      })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.addNote({ name, folderId, content, modified  })\n      }).catch(error => {\n        console.error({ error })\n      })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => {\n                    this.handleSubmit(e)\n                }}>\n                    <label htmlFor=\"note-name-form\">Note Name:</label>\n                    <input type=\"text\"\n                        className=\"note-name-form\"\n                        id=\"nameInput\"\n                        required\n                        ref='nameInput'\n                        defaultValue=\"Note Name\"\n                    />\n                    <br></br>\n                    <label>Folder:</label>\n                    <select name=\"country\" ref='folderId'>\n                        {this.context.folders.map((folder) => {\n                            return <option \n                                        key={folder.id} \n                                        value={folder.id}>\n                                        {folder.name}\n                                    </option>;\n                        })}\n                    </select>\n                <br></br>\n                <label htmlFor=\"note-content-form\">\n                        Content: \n                </label>\n                <input  type=\"text\"\n                        className=\"note-content-form\"\n                        defaultValue=\"content\"\n                        id=\"content\"\n                        ref='contentInput'\n                />\n                <br></br>\n                <button type=\"submit\">Submit</button>\n                </form>\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({ notes, folders });\n            })\n            .catch(error => {\n                console.error({ error });\n            });\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    handleAddFolder = folder => {\n        this.setState({\n            folder: this.state.folders.push(folder)\n        })\n    }\n\n    handleAddNote = note => {\n        this.setState({\n            note: this.state.notes.push(note)\n        })\n    }\n\n    renderNavRoutes() {\n        return (\n            <>\n            <ErrorBoundary message=\"this is an error in the nav bar\">\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </ErrorBoundary>\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n            <ErrorBoundary message=\"This is an error in the main window\">\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path=\"/add-folder\" component={AddFolder} />\n                <Route path=\"/add-note\" component={AddNote} />\n            </ErrorBoundary>\n\n            </>\n        );\n    }\n\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            addFolder: this.handleAddFolder,\n            addNote: this.handleAddNote\n        };\n        return (\n                <ApiContext.Provider value={value}>\n                    <div className=\"App\">\n                        <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                        <header className=\"App__header\">\n                            <h1>\n                                <Link to=\"/\">Noteful</Link>{' '}\n                                <FontAwesomeIcon icon=\"check-double\" />\n                            </h1>\n                        </header>\n                        <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                    </div>\n                </ApiContext.Provider>\n        );\n    }\n}\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}